RankVis
1/16/2018
Guohao Zhang
bd71571@umbc.edu
https://github.com/edgeofmoon/Rendering

Description:
This solution contains multiple projects. RankVis is used for the final experiments.
RankVis was used for two experiments:
1) The dMRI visualization study
This study compared four encoding methods combined with two shapes for an aggregated comparison task; 
and four rendering methods combined with two shapes for tract tracing task and tumor contact task.

2) The color study
This study compared six color maps for an aggregated estimation task and four coloring methods for tract tracing task.
Experiment data analysis files is in sas_color folder.

Color processing matlabe code is in "color_embedding_preprocessing_matlab" folder. Run makeColors.m to get all color files in the data directory.

Color scales are in "MyBlackBodyColor.h" and "MyConstants.h"
Extended black-body: BlackBodyExtended
Isoluminant: in file "SSAO\data\isoluminant.bmp". Then change all colors' L components(in LAB color space) to 50
black body: MyBlackBodyColor.h:mData_1014_3
diverging: MyConstants::DivergingSmooth
cool-warm: generated by interpolating in LAB color space from blue, cyan white, orange to red, with luminance change follow the same as diverging.
All six color maps (in LAB) are stored in files in RankVis/color_maps folder.


Commandline parameters:
The program has multiple mode which can be specified in the command line parameters.
Go to MyVisRankingApp.h to see the value of each mode.
APP_MODE_TRAINING is used for building the training program (provide correct answer after participant answered)
APP_MODE_STUDY is the formal study program.
APP_MODE_LIGHTING is used for testing the lighting profile of each rendering methods.
APP_MODE_OCCLUSION is used for testing the occlusion profile of different shapes (glyph vs tube)
APP_MODE_PRINTDATA is used for addtional output before the visualizations are presented. 
One example is to print the vis config information for the current subject to a file before proceeding to other mode. 
This functionality of this mode is selected via uncommenting code lines in MyVisRankingApp.cpp, after "if (IsOnMode(APP_MODE_PRINTDATA))" statement.

RanVis [participant_index] [start_trial_index] [mode:training/formal] [enable_debug] [print_configData]
participant_index: default 0. Value mode by 6 determines the order of the color * block.
start_trial_index: defualt -1 (start from begining)
mode: 1 training/ 2 formal study
enable_debug: default 0. set to 1 to enable keyboard function to "next [n]", "previous [p]", "highlight traced tracts for task 2 [k]" etc.
print_configData: default 0. set to 1 to enable print result table without user input.

Data:
There are different types of files as data input.
The path to all data folders are specified in MyVisRankingApp::Init() function.

Build:
For dMRI visualization study, include MyVisRankingApp_UI_old.cpp and MyVisTrialManager_old.cpp. 
Also change the mTracts.Read() to use resolution 3 data in MyVisRankingApp::Init() function.

For color study, include MyVisRankingApp_UI.cpp and MyVisTrialManager.cpp instead.
Also change the mTracts.Read() to use resolution 2 data in MyVisRankingApp::Init() function.
Exclude MyVisRankingApp_UI_color1.cpp and MyVisTrialManager_color1.cpp for both cases.

All *.cpp files with a main function are for testing purposes and only one should be included for building an executable.
The appTest.cpp should be used for building the experiment program.
The tractView.cpp should be used for building the viewer where the five major bundles are colored and labelled.

SAS:
The sas code for the color study is in sas_color folder.
The sas code for the dMRI ranking study is in sas_ranking folder.
